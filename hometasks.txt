`Лекция 01

01.1) Вывести геометрическую прогрессию с 1 до 2000 со знаменателем 2. for, while

Сочетания:
01.2) Создать массив с заданным количеством 0 и 1
   create_array(int*, int n, int k)
   create_array(pa, 5, 3) -> pa={0, 0, 1, 1, 1}

01.3) Написать функцию print, распечатывающую состояние массива
   print(int*, int)
   print(int*, int*)

01.4) Распечатать все сочетания: функция next, переводящую текущее состояние в следующее.
   bool next(int*, int*)

01.5) Сдвинуть элементы массива на k позиций по циклу
    a) С использованием дополнительного массива
    b*) В том же массиве

01.6) Заменить элементы массива на сумму
    a) С использованием дополнительного массива
    b*) В том же массиве

01.7) Распечатать двоичное представление числа

Лекция 02

Без массивов за один проход:
02.1) В файле набор действительных чисел:
   a) найти сумму
   b) найти количество
   c) среднее
   d*) дисперсию

02.2) В файле действительные числа
    x0  a0 a1 ... an
    a) многочлен и производная
    x0  an a(n-1) ... a0
    b*) многочлен и производная

02.3 Алгоритм Евклида:
     a) По заданным a и b найти НОД(a,b)
     b) Найти p, q такие что a*p + b*q = 1
     c adv) При каких числах a,b алгоритм работает дольше всего? Как оценить время работы алгоритма?   

Лекция 03

	Рекурсия:
	03.1) Факториал f(n)
	03.2) Фиббоначи f(n)
	03.3) Биномиальные коэффициенты
	04.4) Ханойская башня

	04.5) Бинарный алгоритм Евклида: написать функцию gcd_bin(int a, int b), находящую наибольший общий делитель чисел a и b методом деления пополам
	04.6) Калькулятор на make:
	      1) Создать программы plus, multiply, считывающие имена трёх файлов из аргументов командной строки. Из первых двух файлов происходит одновременное чтение чисел x, y. Для каждой пары выполняется операция, соответствующая имени программы и результат записывается в третий файл.
	      2) Создать makefile, содержащий набор правил, приводящих к созданию файла f.txt, заполненного по формуле f = a*b + c

 
Про классы:
    Страуструп: 5.1, 5.2.*, 5.4.{1,2,4}, 5.5.{1,2,3,5}, 7.1, 7.2.1

    Альтернатива Страуструпу: 
    		http://valera.asf.ru/cpp/book/c13.html
		13.1, 13.2, 13.3

Лекция 04
       Реализовать классы с набором операций:
       04.1) Трёхмерный вектор: конструирование, умножение на число, сложение, вывод на печать
       04.2) Полином: конструирование, умножение на число, умножение полинома на полином, вывод на печать
       04.3) Одномерный вектор с использованием new: конструирование, доступ к элементу по [], уничтожение
