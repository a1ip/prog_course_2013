Лекция 01

01.1) Вывести геометрическую прогрессию с 1 до 2000 со знаменателем 2. for, while

Сочетания:
01.2) Создать массив с заданным количеством 0 и 1
   create_array(int*, int n, int k)
   create_array(pa, 5, 3) -> pa={0, 0, 1, 1, 1}

01.3) Написать функцию print, распечатывающую состояние массива
   print(int*, int)
   print(int*, int*)

01.4) Распечатать все сочетания: функция next, переводящую текущее состояние в следующее.
   bool next(int*, int*)

01.5) Сдвинуть элементы массива на k позиций по циклу
    a) С использованием дополнительного массива
    b*) В том же массиве

01.6) Заменить элементы массива на сумму
    a) С использованием дополнительного массива
    b*) В том же массиве

01.7) Распечатать двоичное представление числа

Лекция 02

Без массивов за один проход:
02.1) В файле набор действительных чисел:
   a) найти сумму
   b) найти количество
   c) среднее
   d*) дисперсию

02.2) В файле действительные числа
    x0  a0 a1 ... an
    a) многочлен и производная
    x0  an a(n-1) ... a0
    b*) многочлен и производная

02.3 Алгоритм Евклида:
     a) По заданным a и b найти НОД(a,b)
     b) Найти p, q такие что a*p + b*q = 1
     c adv) При каких числах a,b алгоритм работает дольше всего? Как оценить время работы алгоритма?    
