Лекция 01

01.1) Вывести геометрическую прогрессию с 1 до 2000 со знаменателем 2. for, while

Сочетания:
01.2) Создать массив с заданным количеством 0 и 1
   create_array(int*, int n, int k)
   create_array(pa, 5, 3) -> pa={0, 0, 1, 1, 1}

01.3) Написать функцию print, распечатывающую состояние массива
   print(int*, int)
   print(int*, int*)

01.4) Распечатать все сочетания: функция next, переводящую текущее состояние в следующее.
   bool next(int*, int*)

01.5) Сдвинуть элементы массива на k позиций по циклу
    a) С использованием дополнительного массива
    b*) В том же массиве

01.6) Заменить элементы массива на сумму
    a) С использованием дополнительного массива
    b*) В том же массиве

01.7) Распечатать двоичное представление числа

Лекция 02

Без массивов за один проход:
02.1) В файле набор действительных чисел:
   a) найти сумму
   b) найти количество
   c) среднее
   d*) дисперсию

02.2) В файле действительные числа
    x0  a0 a1 ... an
    a) многочлен и производная
    x0  an a(n-1) ... a0
    b*) многочлен и производная

02.3 Алгоритм Евклида:
     a) По заданным a и b найти НОД(a,b)
     b) Найти p, q такие что a*p + b*q = 1
     c adv) При каких числах a,b алгоритм работает дольше всего? Как оценить время работы алгоритма?   

Лекция 03

	Рекурсия:
	03.1) Факториал f(n)
	03.2) Фиббоначи f(n)
	03.3) Биномиальные коэффициенты
	04.4) Ханойская башня

	04.5) Бинарный алгоритм Евклида
	04.6) Калькулятор на make

 
Про классы:
    Страуструп: 5.1, 5.2.*, 5.4.{1,2,4}, 5.5.{1,2,3,5}, 7.1, 7.2.1

    Альтернатива Страуструпу: 
    		http://valera.asf.ru/cpp/book/c13.html
		13.1, 13.2, 13.3

Лекция 04
	04.01) *** По заданной формуле построить Makefile, реализующий вычисления по данной формуле. Формула - строка, содержащая символы +-/*() и символы латинского алфавита. По формуле a*b+c должен формироваться Makefile

f.txt: f1.txt c.txt
	plus f1.txt c.txt f.txt

f1.txt: a.txt b.txt
	mult a.txt b.txt f1.txt

	04.02) Исправить программу с массивом и строчкой OurArray x; x = y;
	04.03) Класс Combination:
		Конструируется по количеству нулей и единиц
		Распечатывает своё текущее состояние
		Функция next перехода в следующее состояние
	04.04) Во входном потоке пары чисел x_i, y_i. Считать их, методом наименьших квадратов определить k и c прямой y = kx + c, наилучшим образом приближающие эти данные 
	04.05) По примеру ura_ku сделать Makefile, генерирующий набор программ для калькулятора mult, plus, divide, subtr
